// app/api/translate/route.ts
export async function POST(req: Request) {
    try {
      const { input } = await req.json();
  
      if (!input || input.trim() === "") {
        return new Response(
          JSON.stringify({ error: "Missing or empty input." }),
          { status: 400 }
        );
      }
  
      const response = await fetch("http://localhost:5000/translate", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ input }),
      });
  
      if (!response.ok) {
        const errorText = await response.text();
        return new Response(
          JSON.stringify({ error: "Flask API error", details: errorText }),
          { status: 500 }
        );
      }
  
      const data = await response.json();
  
      if (!data?.vanilla || !data?.fine_tuned) {
        return new Response(
          JSON.stringify({ error: "Missing output from backend." }),
          { status: 500 }
        );
      }
  
      return new Response(JSON.stringify(data), {
        status: 200,
        headers: { "Content-Type": "application/json" },
      });
    } catch (error) {
      return new Response(
        JSON.stringify({
          error: "Unexpected server error",
          details: error instanceof Error ? error.message : String(error),
        }),
        { status: 500 }
      );
    }
  }
  